name: 'dbt_certification_prep'            # [REQUIRED] The name of a dbt project. Must be letters, digits and underscores only, and cannot start with a digit. Recommendation is to name it after your company.
version: '1.0.0'                          # [REQUIRED] The version of the project - required but not relevant to the code itself. Different from the version at the top of other .yml files and the one below
config-version: 2                         # [REQUIRED] The only supported version, always set to 2 for the time being

profile: 'default'                        # [REQUIRED] in dbt Core unless profile details are supplied via the --profile flag in the CLI instead of the profiles.yml file | [OPTIONAL] in dbt Cloud

# These configurations specify where dbt should look for different types of files.
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
docs-paths: ["docs"] # add this to make dbt search for docs blocks in the docs folder

query-comment: executed by dbt            # adds a SQL comment at the top of each query sent to the data warehouse. Leave blank or set to null to disable.
require-dbt-version: '>1.0.0'             # checks for compatibility issues given a minimum version, or a range of versions, e.g. ['>=1.0.0', '<2.0.0']. Quotes required, no whitespace in string. Can be disabled with --no-version-check flag

target-path: "target"                     # directory which will store compiled SQL files
log-path: logs                            # the path to which dbt will write log data, currently set to the default logs folder
packages-install-path: dbt_packages       # the path to which dbt will install package data, currently set to the default dbt_packages folder
clean-targets:                            # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

quoting:                                  # optionally specify if there should be quotes in the compiled SQL when it comes to the fully qualified name
  database: false
  schema: false
  identifier: false

models:
  dbt_certification_prep:
    staging:
      +materialized: view                 
    intermediate:
      +materialized: ephemeral            # doesn't get built in the data warehouse, taken as a CTE instead      

# seeds:
#   <seed-configs>

# snapshots:
#   <snapshot-configs>

# sources:
#   <source-configs>
  
# tests:
#   <test-configs> 

vars:                                       # add variables that can be referenced in models using the {{var('')}} macro
  target_audience_min_dob: to_date('1990-01-01')

on-run-start: 'use role dbt_role;'          # specify a sql statemet that gets executed before each query is run
on-run-end: 'use role dbt_role;'            # specify a sql statemet that gets executed after each query is run